/**
 * Copyright (c) Microsoft.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

/*

Generated Command List:

azure vm redeploy 
--resource-group $p0
--vm-name $p1


*/

'use strict';
var profile = require('../../../util/profile');
var utils = require('../../../util/utils');

var $ = utils.getLocaleString;exports.init = function (cli) {

/*
  VirtualMachines Redeploy
  --resource-group
  --vm-name
*/
  var virtualMachinesRedeploy = cli.category('vm')
  .description($('Commands to manage your virtual machines.  '));
  virtualMachinesRedeploy.command('redeploy [resource-group] [vm-name]')
  .description($('The operation to redeploy a virtual machine.'))
  .usage('[options] <resource-group> <vm-name>')
  .option('-g, --resource-group <resource-group>', $('resource-group'))
  .option('-n, --vm-name <vm-name>', $('vm-name'))
  .option('-s, --subscription <subscription>', $('The subscription identifier'))
  .execute(function(resourceGroup, vMName, options, _) {
    if (!resourceGroup) {
      resourceGroup = cli.interaction.promptIfNotGiven($('resource-group : '), resourceGroup, _);
    }

    cli.output.verbose('resourceGroup = ' + resourceGroup);
    if (!vMName) {
      vMName = cli.interaction.promptIfNotGiven($('vm-name : '), vMName, _);
    }

    cli.output.verbose('vMName = ' + vMName);
    var subscription = profile.current.getSubscription(options.subscription);
    var computeManagementClient = utils.createComputeManagementClient(subscription);
    var result = computeManagementClient.virtualMachines.redeploy(resourceGroup, vMName, _);
    if (result) {
      cli.output.json(result);
    }
  });


};
